name: postgres-integration-tests.yml

on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - reopened
    branches: 
      - development
      - master
  push:
    branches:
      - stravid87/postgres-action

jobs:
  # Label of the runner job
  runner-job:
    # You must use a Linux environment when using service containers or container jobs
    runs-on: ubuntu-latest

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: 1234
          POSTGRES_USER: postgres
          POSTGRES_DBNAME: postgres # local_rs

        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.21'
      - name: "Run Unit Tests"
        run: go test -v globe-and-citizen/layer8/server
        env: 
          ENVIRONMENT: "testing"
          DB_PORT: 5432 # YOUR DB MAY DIFFER!
          DB_USER: postgres
          DB_USER: postgres # YOUR DB MAY DIFFER!
          DB_PASS: 1234 # YOUR DB MAY DIFFER!
          DB_NAME: postgres # YOUR DB MAY DIFFER!
          SSL_MODE: disable
          SSL_ROOT_CERT: 
          DB_HOST: localhost
          JWT_SECRET_KEY: secret
          SERVER_PORT: 5001
          UP_999_SECRET_KEY: 
          MP_123_SECRET_KEY: 

      # # Performs a clean installation of all dependencies in the `package.json` file
      # # For more information, see https://docs.npmjs.com/cli/ci.html
      # - name: Install dependencies
      #   run: npm ci

      # - name: Connect to PostgreSQL
      #   # Runs a script that creates a PostgreSQL table, populates
      #   # the table with data, and then retrieves the data
      #   run: node client.js
      #   # Environment variables used by the `client.js` script to create
      #   # a new PostgreSQL table.
      #   env:
      #     # The hostname used to communicate with the PostgreSQL service container
      #     POSTGRES_HOST: localhost
      #     # The default PostgreSQL port
      #     POSTGRES_PORT: 5432


